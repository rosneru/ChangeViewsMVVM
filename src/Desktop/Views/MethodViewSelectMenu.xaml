<UserControl x:Class="Desktop.Views.MethodViewSelectMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Desktop.Views"
             xmlns:desktop="clr-namespace:Desktop"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="800">
  <GroupBox BorderThickness="0">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" SharedSizeGroup="GlobalA"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.Resources>
        <desktop:BindingProxy x:Key="Proxy" Data="{Binding}"/>
      </Grid.Resources>

      <Label Content="Select method"
             Grid.Row="0" Grid.Column="0"/>

      <ComboBox DisplayMemberPath="Name"
                IsSynchronizedWithCurrentItem="True"
                SelectedItem="{Binding CurrentMethod, UpdateSourceTrigger=PropertyChanged}"
                ItemsSource="{Binding AllMethodsView}"
                IsEnabled="{Binding IsMenuAllowed}"
                Grid.Row="0" Grid.Column="1"/>

      <!-- NOTE: 1) This Button only contains a context menu and is not
                    bound to a command itself. 
                 2) An EventTrigger is set up to also open the context 
                    menu on left click.
                 3) As a ContextMenu isn't part of the VisualTree and 
                    thus the menu items can't be out-of-the-box bound
                    to commands a BindingProxy (custom class) is used -->
      <Button Content="_Manage" Grid.Row="0" Grid.Column="2"
              IsEnabled="{Binding IsMenuAllowed}">
        <Button.Triggers>
          <EventTrigger RoutedEvent="Button.Click">
            <EventTrigger.Actions>
              <BeginStoryboard>
                <Storyboard>
                  <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                  </BooleanAnimationUsingKeyFrames>
                </Storyboard>
              </BeginStoryboard>
            </EventTrigger.Actions>
          </EventTrigger>
        </Button.Triggers>
        <Button.ContextMenu>
          <ContextMenu>
            <MenuItem Header="_New" Command="{Binding Source={StaticResource Proxy}, Path=Data.CmdNew}"/>
            <Separator/>
            <MenuItem Header="_Rename" Command="{Binding Source={StaticResource Proxy}, Path=Data.CmdRename}"/>
            <MenuItem Header="_Duplicate" Command="{Binding Source={StaticResource Proxy}, Path=Data.CmdDuplicate}"/>
            <Separator/>
            <MenuItem Header="Delete"  Command="{Binding Source={StaticResource Proxy}, Path=Data.CmdDelete}"/>
          </ContextMenu>
        </Button.ContextMenu>
      </Button>

      <Label Content="{Binding UserInputPrompt, FallbackValue='Enter name:'}"
             Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
             Margin="0,6,0,0"
             VerticalAlignment="Bottom"
             Visibility="{Binding IsNamePanelOpen, 
                         Converter={StaticResource BoolVisibilityConverter}}"/>

      <!--NOTE: 1) This TextBox has got an updated style (Inherited 
                from the one set up in App.xaml) which is getting it
                the focus when binding variable IsNamePanelOpen in view
                model is set to true. 
                2) It also has the keys <Enter> and <Esc> bound to the
                view model commands CmdOk and CmdCancel. -->
      <TextBox Text="{Binding
      UserInputMethodName, UpdateSourceTrigger=PropertyChanged}"
               Grid.Row="2" Grid.Column="1"
               Margin="3,0,3,3"
               VerticalAlignment="Bottom"
               Visibility="{Binding IsNamePanelOpen, 
                            Converter={StaticResource BoolVisibilityConverter}}">
        <TextBox.Style>
          <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsNamePanelOpen}" Value="True">
                <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBox.Style>
        <TextBox.InputBindings>
          <KeyBinding Key="Enter" Command="{Binding Path=CmdOk}"/>
          <KeyBinding Key="Esc" Command="{Binding Path=CmdCancel}"/>
        </TextBox.InputBindings>
      </TextBox>

      <Button Content="Ok"
              Command="{Binding CmdOk}"
              Margin="3,0,3,3"
              VerticalAlignment="Bottom"
              Grid.Row="2" Grid.Column="2"
              Visibility="{Binding IsNamePanelOpen, 
                           Converter={StaticResource BoolVisibilityConverter}}"/>

      <Button Content="Cancel"
              Command="{Binding CmdCancel}"
              VerticalAlignment="Bottom"
              Margin="3,0,3,3"
              Grid.Row="2" Grid.Column="3"
              Visibility="{Binding IsNamePanelOpen, 
                           Converter={StaticResource BoolVisibilityConverter}}"/>

      <Label Content="{Binding UserInputPrompt, FallbackValue='Really delete?'}"
             Grid.Row="3" Grid.Column="1"
             Margin="0,6,0,0"
             VerticalAlignment="Bottom"
             HorizontalAlignment="Right"
             FontWeight="Bold"
             Visibility="{Binding IsDeletePanelOpen, 
                          Converter={StaticResource BoolVisibilityConverter}}"/>

      <Button Content="Yes"
              Command="{Binding CmdOk}"
              Grid.Row="3" Grid.Column="2"
              Margin="3,0,3,3"
              VerticalAlignment="Bottom"
              Visibility="{Binding IsDeletePanelOpen, 
                           Converter={StaticResource BoolVisibilityConverter}}"/>

      <Button Content="No"
              Command="{Binding CmdCancel}"
              Grid.Row="3" Grid.Column="3"
              Margin="3,0,3,3"
              VerticalAlignment="Bottom"
              Visibility="{Binding IsDeletePanelOpen, 
                           Converter={StaticResource BoolVisibilityConverter}}"/>
    </Grid>
  </GroupBox>
</UserControl>
